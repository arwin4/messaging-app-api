{
	"info": {
		"_postman_id": "def43212-dc48-45b1-a8b3-76c0189c01db",
		"name": "Rooms",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30981832"
	},
	"item": [
		{
			"name": "Get user rooms",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Gets rooms\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`rooms`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get room",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Gets room\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`dateCreated`);\r",
							"        pm.expect(pm.response.text()).to.include(`members`);\r",
							"        pm.expect(pm.response.text()).to.include(`messages`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/65958342fbe6bf69aa69dcd6",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65958342fbe6bf69aa69dcd6"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get room - not a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refuses request for room that requester is not in\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`The room does not exist or you are not a member of it`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/65967638a16cc000928c605c",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65967638a16cc000928c605c"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get room - room does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refuses request for room that does not exist\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`The room does not exist or you are not a member of it`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/65967638a16cc000928c605f",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65967638a16cc000928c605f"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete room - room does not exist",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refuses deleting room that does not exist\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`The room does not exist or you are not a member of it`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/65967638a16cc000928c605f",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65967638a16cc000928c605f"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete room - not a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refuses to delete room of which requester is not a member\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`The room does not exist or you are not a member of it`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/6595740d379e705e4dbc085a",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"6595740d379e705e4dbc085a"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create room",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns created room\", function () {\r",
							"        pm.expect(pm.response.text()).to.include(`\"dateCreated\"`);\r",
							"        pm.expect(pm.response.text()).to.include(`\"members\"`);\r",
							"        pm.expect(pm.response.text()).to.include(`\"messages\"`);\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{domain}}/rooms/",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns member list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"members\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"newMembers\": [\"6594237cbe004b04c4972ee5\", \"6594237cbe004b04c4972ee6\", \"6594237cbe004b04c4972ee7\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/rooms/65958342fbe6bf69aa69dcd6/members",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65958342fbe6bf69aa69dcd6",
						"members"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete members - delete all members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Refuses to delete all members\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This request would remove all members from the room, but rooms must have at least one member\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"membersToDelete\": [\"6594237cbe004b04c4972ee5\", \"6594237cbe004b04c4972ee6\", \"6594237cbe004b04c4972ee7\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/rooms/65958342fbe6bf69aa69dcd6/members/",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65958342fbe6bf69aa69dcd6",
						"members",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete members - delete all other members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Returns member list\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"members\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{jwt}}",
							"type": "string"
						}
					]
				},
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"membersToDelete\": [ \"6594237cbe004b04c4972ee6\", \"6594237cbe004b04c4972ee7\"]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{domain}}/rooms/65958342fbe6bf69aa69dcd6/members/",
					"host": [
						"{{domain}}"
					],
					"path": [
						"rooms",
						"65958342fbe6bf69aa69dcd6",
						"members",
						""
					]
				}
			},
			"response": []
		}
	]
}